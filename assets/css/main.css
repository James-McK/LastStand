/* Consider downloading to local file? */
@import url("https://fonts.googleapis.com/css2?family=Reenie+Beanie&family=Roboto+Mono");

/* Variables */
:root {
	--mono-font: "Roboto Mono", monospace;
	--handwritten-font: "Reenie Beanie", cursive;
	/* These could probably have better names, but I don't know what we're actually planning to do with them yet */
	--background: #24171b;
	--red: #902e29;
	--greenLight: #8a8e48;
	--greenDark: #495435;
	--brownLight: #99603d;
	--brownDark: #5d453e;
	--beige: #907c68;
	--text: #debf89;
	--lightText: #d6d6d6;
}

html {
	/* Monospace as default? Maybe change this */
	font-family: var(--mono-font);
	color: var(--text);
}

body {
	margin: 0;
	background-color: #111111;
}

a:link {
	text-decoration: none;
	font-family: var(--mono-font);
}

.handwritten {
	font-family: var(--handwritten-font);
	/* Reenie Beanie needs to be increased in size to actually be readable */
	font-size: 2rem;
}

.wrapper {
	display: flex;
	flex-direction: column;
	height: 100vh;
}

.row {
	display: flex;
	flex-direction: row;
}

.col {
	margin: 5px;
	height: 70vh;
	background-color: var(--background);
	border-radius: 3px;
}

.col1 {
	flex: 10;
	display: flex;
	flex-direction: column;
}

.col2 {
	flex: 30;
	margin-left: 0;
	margin-right: 0;
	overflow: hidden;
}

.col2 img {
	width: 100%;
	height: 100%;
	/* This code centres the images and stops them from being stretched.
    Unfortunately, it cuts some of them off, so it's unused for now. */
	/*
	object-fit: cover;
	object-position: center center;
    */
}

.col3 {
	flex: 10;
	display: flex;
	flex-direction: column;
}

.dialogueOuter {
	height: 100%;
	background-color: #111111;
}

.torch {
	position: fixed;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	pointer-events: none;
	background: radial-gradient(circle at var(--x) var(--y), transparent 10%, rgba(0, 0, 0, 0.95) 20%);
}

.dialogue {
	margin: 10px;
}

.map {
	width: 92%;
	margin: 1.2vh auto 0 auto;
	background-color: var(--brownDark);
	flex: 10;
}

.map img {
	width: 100%;
	border-radius: 5px;
}

.inventoryHeading {
	text-decoration: underline;
	color: var(--lightText);
}

.inventory {
	text-align: center;
	flex: 30;
	background-color: var(--brownDark);
	width: 92%;
	margin: 1.2vh auto;
}

.buttonChoice {
	width: 70%;
	border-radius: 15px;
	padding: 12px;
	display: block;
	margin: 10px auto 10px auto;
	background-color: var(--beige);
	color: var(--background);
	box-shadow: 0 0 5px 2px black;
	border-style: none;
	font-size: 12pt;
	font-weight: bolder;
	transition: all 0.25s ease;
}

button:enabled:hover {
	cursor: pointer;
	color: var(--beige);
	background-color: var(--background);
}

button[disabled],
input[type="button"][disabled] {
	opacity: 0.5;
	cursor: not-allowed;
}

.textBox {
	font-size: 16pt;
	height: 70%;
	max-height: 70%;
	width: 90%;
	margin: auto;
	padding: 25px;
	background-color: var(--beige);
	color: var(--background);
	border-radius: 20px;
	border-style: none;
	box-shadow: 0 0 10px 2px black;
	overflow: auto;
}

.centeredText {
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-54%, -50%);
}

/* CSS Fire effect

.container {
	display: block;
	background: black;
	margin: 80px auto;
	width: 60px;
	height: 60px;
	position: relative;
	transform-origin: center bottom;
	animation-name: flicker;
	animation-duration: 3ms;
	animation-delay: 200ms;
	animation-timing-function: ease-in;
	animation-iteration-count: infinite;
	animation-direction: alternate;
}

.flame {
	bottom: 0;
	position: absolute;
	border-bottom-right-radius: 50%;
	border-bottom-left-radius: 50%;
	border-top-left-radius: 50%;
	transform:rotate(-45deg) scale(1.5,1.5)
}

.yellow {
	left: 15px;
	width: 30px;
	height: 30px;
	background: gold;
	box-shadow: 0px 0px 9px 4px gold;
}

.orange {
	left: 10px;
	width: 40px;
	height: 40px;
	background: orange;
	box-shadow: 0px 0px 9px 4px orange;
}

.red {
	left: 5px;
	width: 50px;
	height: 50px;
	background: orangered;
	box-shadow: 0px 0px 5px 4px orangered;
}

.white {
	left: 15px;
	bottom: -4px;
	width: 30px;
	height: 30px;
	background: white;
	box-shadow: 0px 0px 9px 4px white;
}

.circle {
	border-radius: 50%;
	position: absolute;
}

.blue {
	width: 10px;
	height: 10px;
	left: 25px;
	bottom: -25px;
	background: slateblue;
	box-shadow: 0px 0px 15px 10px slateblue;
}

.black {
	width: 40px;
	height: 40px;
	left: 10px;
	bottom: -60px;
	background: black;
	box-shadow: 0px 0px 15px 10px black;
}

.link {
	color: var(--background);
	text-decoration: underline;
}

.changeText {
	background-color: #debf89;
	margin-top: 10px;
	font-weight: bold;
}

@keyframes flicker {
	0% {transform: rotate(-1deg);}
	20% {transform: rotate(1deg);}
	40% {transform: rotate(-1deg);}
	60% {transform: rotate(1deg) scaleY(1.04);}
	80% {transform: rotate(-2deg) scaleY(0.92);}
	100% {transform: rotate(1deg);}
}

*/

.temperature {
	margin: 5px;
}

.temperatureMeter {
	width: 80%;
	display: inline-block;
	border-radius: 5px;
	overflow: hidden;
	background: #111111;
	font-size: 0px;
}

.temperatureSpan {
	color: #eeeeee;
}

.divTempMeter {
	height: 1rem;
	display: inline-block;
	margin: 0px;
}

.time {
	margin: 5px;
}

.translatedTime {
	color: #eeeeee;
	margin-bottom: 10px;
	display: inline-block;
}

.torch {
	position: fixed;
	left: 0;
	top: 0;
	pointer-events: none;
	height: 100%;
	width: 100%;
	background: radial-gradient(circle at var(--x) var(--y), transparent 2%, rgba(0, 0, 0, 0.95) 25%);
}

.collectable {
	color: var(--background);
}
